(base) ian@ian-Latitude-E7440:~$ gfortran goodnight.f -o goodnight
(base) ian@ian-Latitude-E7440:~$ ./goodnight
 good night
(base) ian@ian-Latitude-E7440:~$ cat goodnight.f
           character(len=10) message
           message = "good night"
           print *, message
           end program                                                                                                   
(base) ian@ian-Latitude-E7440:~$ sloccount goodnight.f
Have a non-directory at the top, so creating directory top_dir
Adding /home/ian/goodnight.f to top_dir
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
4       top_dir         fortran=4


Totals grouped by language (dominant language first):
fortran:          4 (100.00%)




Total Physical Source Lines of Code (SLOC)                = 4
Development Effort Estimate, Person-Years (Person-Months) = 0.00 (0.01)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.03 (0.39)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 0.02
Total Estimated Cost to Develop                           = $ 82
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."
(base) ian@ian-Latitude-E7440:~$ gfortran goodnight.f -S
(base) ian@ian-Latitude-E7440:~$ gfortran goodnight.s -o goodnights
(base) ian@ian-Latitude-E7440:~$ ./goodnights
 good night
(base) ian@ian-Latitude-E7440:~$ cat goodnight.s
	.file	"goodnight.f"
	.text
	.section	.rodata
.LC0:
	.string	"goodnight.f"
	.text
	.type	MAIN__, @function
MAIN__:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$544, %rsp
	movabsq	$7451608143864229735, %rax
	movq	%rax, -10(%rbp)
	movw	$29800, -2(%rbp)
	leaq	.LC0(%rip), %rax
	movq	%rax, -536(%rbp)
	movl	$3, -528(%rbp)
	movl	$128, -544(%rbp)
	movl	$6, -540(%rbp)
	leaq	-544(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_write@PLT
	leaq	-10(%rbp), %rcx
	leaq	-544(%rbp), %rax
	movl	$10, %edx
	movq	%rcx, %rsi
	movq	%rax, %rdi
	call	_gfortran_transfer_character_write@PLT
	leaq	-544(%rbp), %rax
	movq	%rax, %rdi
	call	_gfortran_st_write_done@PLT
	nop
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	MAIN__, .-MAIN__
	.globl	main
	.type	main, @function
main:
.LFB1:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	%edi, -4(%rbp)
	movq	%rsi, -16(%rbp)
	movq	-16(%rbp), %rdx
	movl	-4(%rbp), %eax
	movq	%rdx, %rsi
	movl	%eax, %edi
	call	_gfortran_set_args@PLT
	leaq	options.1.0(%rip), %rax
	movq	%rax, %rsi
	movl	$7, %edi
	call	_gfortran_set_options@PLT
	call	MAIN__
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE1:
	.size	main, .-main
	.section	.rodata
	.align 16
	.type	options.1.0, @object
	.size	options.1.0, 28
options.1.0:
	.long	2116
	.long	4095
	.long	0
	.long	1
	.long	1
	.long	0
	.long	31
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
(base) ian@ian-Latitude-E7440:~$ 

